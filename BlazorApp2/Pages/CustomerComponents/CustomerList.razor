@page "/customers"
@inject HttpClient Http
@inject IModalService modal
@inject NavigationManager NavigationManager
<PageTitle>Customer List</PageTitle>

@using BlazorApp2.Data
@using BlazorApp2.Pages.Modal;
@using Models.EntityClass;

<h1>Customer List</h1>

<button @onclick="@(()=>modal.Show<CommonCUModal>
("Add Customer", new ModalParameters().Add(nameof(CommonCUModal.IsCreateCustomer), true)))"
        class="btn btn-primary">
    Add Customer
</button>
@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.Phone</td>
                    <td>@customer.Address</td>
                    <td>@customer.Email</td>
                    <td>
                        <div @onclick="@(()=> modal.Show<CommonCUModal>("Update Customer",
                            new ModalParameters()
                            .Add(nameof(CommonCUModal.IsCreateCustomer), true)
                            .Add(nameof(CommonCUModal.Id), customer.Id)))"
                            class="oi oi-pencil"></div>
                        <div @onclick="@(() => DeleteCustomer(customer.Id))" class="oi oi-delete"></div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer>? customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await Http.GetFromJsonAsync<List<Customer>>("customer-api/Customers/Get");
    }

    protected async Task DeleteCustomer(int id)
    {
        var response = await Http.DeleteAsync("/customer-api/Customers/Delete?id=" + id);
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/customers", true);
    }
}
